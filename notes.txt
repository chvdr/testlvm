CREATE NEW VIRTUAL MACHINE FOR TESTING 

vagrant init jasonc/centos7
vi Vagrantfile
vagrant up 
# see the name of the shared directory to be aware where to test scripts
vagrant ssh
# vagrant destroy -- will wipe all in the directory (and only docs will stay)


■ 12/25/2019
----------------------------------------------------------------------------

BIOS of laptop has been fixed -- some type of virtualization has not been enabled 

I. GETTING SPACE FROM THE EXISTING EXT4 VG/LV 

[1]. Gather info
vgdisplay dbadata
ls -latr /backups/ 	# <must see test.txt>
lvs 
lvscan

[2]. Un-mount and check 
umount /backups/
e2fsck -vy /dev/mapper/dbadata-backup1_lv
e2fsck -f /dev/mapper/dbadata-backup1_lv
<"0.0% non-contiguous" is what we expect to see here>

[3]. Reduce LV 
lvdisplay /dev/dbadata/backup1_lv
lvreduce /dev/dbadata/backup1_lv --size 1.89G
lvdisplay /dev/dbadata/backup1_lv
<Expected result: "LV Size 1.89 GiB">

[4]. Reduce VG 
vgreduce dbadata /dev/sdc1

[5]. Extend FS over new amount of space*** (DANGEROUS!!)
e2fsck -fy /dev/dbadata/backup1_lv
resize2fs /dev/dbadata/backup1_lv

II. CREATING NEW XFS DRIVE

[5]. Create new VG (with LV on it) 

[5]. Create XFS on new LV 


   6  vgdisplay dbadata
    7  lvs
    8  umount /backups/
    9  e2fsck -vy /dev/mapper/dbadata-backup1_lv
   10  resize2fs /dev/mapper/dbadata-backup1_lv 511
   11  e2fsck -f /dev/mapper/dbadata-backup1_lv
   12  resize2fs /dev/mapper/dbadata-backup1_lv 511
   13  mount -a
   14  ll
   15  df -hT
   16  resize2fs /dev/mapper/dbadata-backup1_lv 511M
   17  umount /backups/
   18  resize2fs /dev/mapper/dbadata-backup1_lv 511M
   19  e2fsck -f /dev/mapper/dbadata-backup1_lv
   20  resize2fs /dev/mapper/dbadata-backup1_lv 511M
   21  lvextend -l -500 /dev/mapper/dbadata-backup1_lv
   22  lvreduce -l -400 /dev/mapper/dbadata-backup1_lv
   23  mount -a
   24  df -hT
   25  vgreduce dbdata
   26  vgreduce --help
   27  vgreduce dbdata /dev/sdc1
   28  pvs
   29  vgreduce dbadata /dev/sdc1
   30  vgreduce dbadata /dev/sdb1
   31  vgdisplay dbadata
   32  umount /backups/
   33  e2fsck -f /dev/mapper/dbadata-backup1_lv
   34  lvreduce -l -100 /dev/mapper/dbadata-backup1_lv
   35  e2fsck -f /dev/mapper/dbadata-backup1_lv
   36  vgreduce dbadata /dev/sdc1
   37  lsblk
   38  mount -a
   39  ll
   40  ls -latr /backups/
   41  df -hT /backups
   42  vgcreate dbdata_NEW
   43  vgcreate dbdata_NEW /dev/sdc1
   44  vgdisplay
   45  history
   46  lvcreate -l 500 -n backup2_lv dbdata_NEW
   47  lvs
   48  mkdir /backups_NEW
   49  lsblk
   50  blkid
   51  mkfs.xfs /dev/mapper/dbdata_NEW-backup2_lv
   52  lsblk
   53  blkid
   54  vi /etc/fstab
   55  df -hT
   56  mount -a
   57  df -hT
   58  ll /backups
   59  cd /backups
   60  touch test.txt
   61  blkid > test.txt
   62  w
   63  cat test.txt
   64  lsblk
   65  df -hT
   66  ll /backups
   67  mv /backups/test.txt /backups_NEW/
   68  ls -latr /backups_NEW
   69  history
[root@localhost ~]#


■ 12/24/2019
----------------------------------------------------------------------------

parted /dev/sdb mklabel msdos
parted /dev/sdb mkpart primary 512 100%
mkfs.xfs /dev/sdb1
mkdir /mnt/disk
echo `blkid /dev/sdb1 | awk '{print$2}' | sed -e 's/"//g'` /mnt/disk   xfs   noatime,nobarrier   0   0 >> /etc/fstab
mount /mnt/disk

■ 12/23/2019
----------------------------------------------------------------------------

Chavdar@Chavdar-PC MINGW64 ~/shellclass/lvreduce/testlvm (master)
$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Using C:/Users/Chavdar/shellclass/lvreduce/testlvm for persistent storage.
==> default: Importing base box 'centos/7'...
==> default: Matching MAC address for NAT networking...
==> default: Using C:/Users/Chavdar/shellclass/lvreduce/testlvm for persistent storage.
==> default: Checking if box 'centos/7' version '1905.1' is up to date...
==> default: Setting the name of the VM: testlvm_default_1577088518143_56190
==> default: Vagrant has detected a configuration issue which exposes a
==> default: vulnerability with the installed version of VirtualBox. The
==> default: current guest is configured to use an E1000 NIC type for a
==> default: network adapter which is vulnerable in this version of VirtualBox.
==> default: Ensure the guest is trusted to use this configuration or update
==> default: the NIC type using one of the methods below:
==> default:
==> default:   https://www.vagrantup.com/docs/virtualbox/configuration.html#default-nic-type
==> default:   https://www.vagrantup.com/docs/virtualbox/networking.html#virtualbox-nic-type
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Using C:/Users/Chavdar/shellclass/lvreduce/testlvm for persistent storage.
==> default: Running 'pre-boot' VM customizations...
A customization command failed:

["createhd", "--filename", "./secondDisk.vhd", "--format", "VHD", "--variant", "Standard", "--size", 8192]

The following error was experienced:

#<Vagrant::Errors::VBoxManageError: There was an error while executing `VBoxManage`, a CLI used by Vagrant
for controlling VirtualBox. The command and stderr is shown below.

Command: ["createhd", "--filename", "./secondDisk.vhd", "--format", "VHD", "--variant", "Standard", "--size", "8192"]

Stderr: 0%...
Progress state: VBOX_E_FILE_ERROR
VBoxManage.exe: error: Failed to create medium
VBoxManage.exe: error: Could not create the medium storage unit 'C:\Users\Chavdar\shellclass\lvreduce\testlvm\secondDisk.vhd'.
VBoxManage.exe: error: VHD: cannot create image 'C:\Users\Chavdar\shellclass\lvreduce\testlvm\secondDisk.vhd' (VERR_ALREADY_EXISTS)
VBoxManage.exe: error: Details: code VBOX_E_FILE_ERROR (0x80bb0004), component MediumWrap, interface IMedium
VBoxManage.exe: error: Context: "enum RTEXITCODE __cdecl handleCreateMedium(struct HandlerArg *)" at line 450 of file VBoxManageDisk.cpp
>

Please fix this customization and try again.

Chavdar@Chavdar-PC MINGW64 ~/shellclass/lvreduce/testlvm (master)

■ 12/23/2019
----------------------------------------------------------------------------

*UPDATE* Vagrantfile: Fixed variant ('--variant', 'Fixed') to be replaced with Dynamic 
testlvm_default_1577086608617_45210

*UPDATE* (FIXED) The 'SATA Controller' was 'SATA'. This caused error (wrong provider) 

*UPDATE* [Mon, Dec 23, 2019  8:10:27 AM] Added the followed RUBI code:

  config.vm.provider "virtualbox" do |vb|

	#
	# Add disk volumes into the machine 
	#
	
	unless File.exist?('./secondDisk.vdi')
		vb.customize ['createhd', '--filename', './secondDisk.vdi', '--variant', 'Fixed', '--size', 8 * 1024]
	end
	unless File.exist?('./thirdDisk.vdi')
		vb.customize ['createhd', '--filename', './thirdDisk.vdi', '--variant', 'Fixed', '--size', 8 * 1024]
	end
	# vb.memory = "1024"
	vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', './secondDisk.vdi']
	vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', './thirdDisk.vdi']

  end

*UPDATE* Initial file created (blank)
*UPDATE* Started working on Vagrantfile (see https://github.com/chvdr/testlvm.git)

■ 12/20-22/2019
----------------------------------------------------------------------------

Adding new voume and crete /backups

1. Add new disk volume in VM
2. Present to the system
3. Utilize the volume by copying testing data over there

lvcreate -l 2047 -n backup1_lv dbadata

4. ADD sdc1 and sdd1 TO dbadata-backup1_lv

# create new disk 
echo -e 'n\n\n\n\n\nt\n8e\nw' | fdisk /dev/sdb > /dev/null
echo -e 'n\n\n\n\n\nt\n8e\nw' | fdisk /dev/sdc > /dev/null

# create PVs
pvcreate /dev/sdb1 
pvcreate /dev/sdc1 

# Extend the VG 
vgcreate dbadata /dev/sdb1 /dev/sdc1 

# Extend lv 
lvextend -l+2047 /dev/dbadata/backup1_lv
lvextend -l+2047 /dev/dbadata/backup1_lv

# Resize FS 
resize2fs /dev/dbadata/backup1_lv

5. roll back

# reduce LV
lvextend -l-4095 /dev/dbadata/backup1_lv


# reduce VG 


# remove all PVs 

# remove the disk 
echo -e 'd\nw' | fdisk /dev/sdc
echo -e 'd\nw' | fdisk /dev/sdd


■ 12/16/2019
----------------------------------------------------------------------------

#############################################################
##                                                         ##
##                                                         ##
## HOW TO FIX NETBACKUP TRACK DIRECTORY FILLING UP ROOT FS ##
##                                                         ##
##                                                         ##
#############################################################

>> track_directory_filling_up_root_filesystem

---------------------------------------------------------------------------------------------------------------------------------------
--                                                                                                                                   --
-- SOLUTION (CHG0161041 -- https://experian.service-now.com/nav_to.do?uri=change_request.do?sys_id=e7d1973adb243b843b59fbf9f496198e) --
--                                                                                                                                   --
---------------------------------------------------------------------------------------------------------------------------------------


ls -l /sys/class/scsi_host/
echo "- - -" > /sys/class/scsi_host/host4/scan
multipath -ll | grep mpath
cp /etc/multipath.conf /etc/multipath.conf.CHG0161041
vi /etc/multipath.conf
------------------------------- multipath.conf --------------------------
        multipath {
                wwid                    360060e80164cf30000014cf300000063
                alias                   netbackup_disk1
        }
------------------------------- multipath.conf --------------------------
multipath -r
cfdisk /dev/sde
lsblk
pvcreate /dev/mapper/netbackup_disk1_part1
vgcreate netbackupvg "/dev/mapper/netbackup_disk1_part1"
/usr/openv/netbackup/bin/goodies/netbackup stop
mv /usr/openv/netbackup/track /usr/openv/netbackup/track.bak
mkdir -p /usr/openv/netbackup/track
vgdisplay netbackupvg
lvcreate -l 12799 -n tracklv netbackupvg
cp /etc/fstab /etc/fstab.CHG0161041
mkfs -t ext3 /dev/netbackupvg/tracklv
vi /etc/fstab (add the line as per the followed)
--------------------------------------- /etc/fstab ---------------------------------
/dev/netbackupvg/tracklv                /usr/openv/netbackup/track      ext3    defaults 0 0
--------------------------------------- /etc/fstab ---------------------------------
mount -a
cd /usr/openv/netbackup/track
rsync -r /usr/openv/netbackup/track.bak/* .
/usr/openv/netbackup/bin/goodies/netbackup start




■ 12/16/2019
----------------------------------------------------------------------------

# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.disk = './secondDisk.vdi'

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "jasonc/centos7"


disk1 = './secondDisk.vdi'
disk2 = './tirdDisk.vdi'

######
  config.vm.define "iscsitarget" do |iscsitarget|
    iscsitarget.vm.box = "jasonc/centos7"
    iscsitarget.vm.hostname = "lvreduce"

    # iscsitarget.vm.network :private_network, ip: "192.168.202.201"

    iscsitarget.vm.provider "virtualbox" do |vb|
      unless File.exist?(disk1)
        vb.customize ['createhd', '--filename', disk1, '--variant', 'Fixed', '--size', 1 * 1024]
      end
      vb.memory = "1024"
      vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk1]
	
     unless File.exist?(disk2)
        vb.customize ['createhd', '--filename', disk2, '--variant', 'Fixed', '--size', 1 * 1024]
      end
      vb.memory = "1024"
      vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk2]

end 		# config.vm.define "iscsitarget" do |iscsitarget|
######

# config.vm.provision "shell", inline: <<-SHELL
# 	
# 	#
# 	# create specific LVM by provision script 
# 	#
# 	
# 	# Create devices
# 	echo -e 'n\n\n\n\n\nt\n8e\nw' | fdisk /dev/sdb > /dev/null
# 	echo -e 'n\n\n\n\n\nt\n8e\nw' | fdisk /dev/sdc > /dev/null
# 	echo -e 'n\n\n\n\n\nt\n8e\nw' | fdisk /dev/sdd > /dev/null
# 	
# 	# Create PVs 
# 	pvcreate /dev/sdb1 /dev/sdc1 /dev/sdd1 
# 	
# 	# Create VG 'datavg'
# 	vgcreate datavg /dev/sdb1 /dev/sdc1 /dev/sdd1 
# 	
# 	# Create LV 
# 	lvcreate -l 2047 -n backup1_lv datavg
#  
# 	# Add new volumes in LV:
# 	# add /dev/sdc1
# 	lvextend -l+2047 /dev/datavg/backup1_lv
# 	# add /dev/sdd1
# 	lvextend -l+2047 /dev/datavg/backup1_lv
# 	
# 	# Resize FS 
# 	resize2fs /dev/datavg/backup1_lv
# 	
# 	# -- end of the story --
# 	
# SHELL
# 
#   

end 	# Vagrant.configure("2") do |config|

end 
